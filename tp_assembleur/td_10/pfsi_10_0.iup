ffdc  origine
fffa  debut d'execution
61d0   emplacement : 65500  (0xffdc)  ligne n° 23	DEBUT	LDW R1, @INA				// R1 <- M[FFA0h]	R1 = M[FFA0h] = i
ffa0   emplacement : 65502  (0xffde) 
6080   emplacement : 65504  (0xffe0)  ligne n° 24			LDW R0, #SEUIL				// R0 <- 3			R0 = 3
0003   emplacement : 65506  (0xffe2) 
f100   emplacement : 65508  (0xffe4)  ligne n° 25			SUB R1, R0, R0				// R0 <- R1 - R0	R0 = i - 3
0480   emplacement : 65510  (0xffe6)  ligne n° 26			JGE #POSIT-$-2				// saute si dernier risultat positif (PC <- PC # 4)
0004   emplacement : 65512  (0xffe8) 
4700   emplacement : 65514  (0xffea)  ligne n° 27			NEG R0, R0					// R0 <- -R0		R0 = -(i - 3)
4300   emplacement : 65516  (0xffec)  ligne n° 28	POSIT	SRA R0, R0					// R0 <- R0 / 2 	R0 = | i - 3 | / 2
6050   emplacement : 65518  (0xffee)  ligne n° 29			STW R0, @OUTA				// M[FFA2h] <- R0		o = M[FFA2h] = | i - 3 | / 2
ffa2   emplacement : 65520  (0xfff0) 
0950   emplacement : 65522  (0xfff2)  ligne n° 30			JEA @DEBUT					// Saute au dibut du programme (PC <- PC - 28)
ffdc   emplacement : 65524  (0xfff4) 
0000   emplacement : 65526  (0xfff6)  ligne n° 35			RSB RESET_ADDRESS-$			// On riserve RESET_ADDRESS-$ octets afin de placer le prochaine jump ` l'adresse RESET_ADDRESS
0000   emplacement : 65528  (0xfff8) 
0950   emplacement : 65530  (0xfffa)  ligne n° 36			JEA @DEBUT					// Pour le reset (PC <- PC - 32)
ffdc   emplacement : 65532  (0xfffc) 
